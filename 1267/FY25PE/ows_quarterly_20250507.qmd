---
title: "ows_quarterly"
format: html
---

```{r}
#| include: false
library(tidyverse)
library(readxl)
```

## Import Level and Rain Data

```{r}
# Read in level data
dash2_cs1 <- read_rds("data/1267-2_CS1_level.rds")
dash2_cs2 <- read_rds("data/1267-2_CS2_level.rds")

# Read rainfall CSV
rain_data <- read_csv("data/1267-2-1_2024-03-01_to_2025-09-28_rainfall.csv") |>
  select(dtime, rainfall_in) |>
  # Change time zone without affecting values
  mutate(dtime =  force_tz(dtime, tz = "EST"))
```

```{r}
# Adjust for distance between bedding and crate
ow1_level_q2_corrected <- ow1_level_q2_corrected |>
  mutate(ow1_cwlevel = cwlevel + 0.25) |> select(-cwlevel)

ow1_level_q1_corrected <- ow1_level_q1_corrected |>
  mutate(ow1_cwlevel = cwlevel + 0.25) |> select(-cwlevel)

ow2_level_q1_corrected <- ow2_level_q1_corrected |>
  mutate(ow2_cwlevel = cwlevel+ 0.25) |> select(-cwlevel)

ow2_level_q2_corrected <- ow2_level_q2_corrected |>
  mutate(ow2_cwlevel = cwlevel + 0.25) |> select(-cwlevel)

# Combine each OW data into one df
ow1_comb <- rbind(ow1_level_q1_corrected, ow1_level_q2_corrected)

ow2_comb <- rbind(ow2_level_q1_corrected, ow2_level_q2_corrected)

# Combine level and rain dfs
ow_comb <- ow1_comb |>
  # Combine with ow2
  left_join(ow2_comb, join_by(dtime == dtime)) |>
  # Combine with rain data
  left_join(rain, join_by(dtime == dtime)) |>
  mutate(rainfall = if_else(is.na(rainfall), 0, rainfall))
```

```{r}
# OW2 plot before maintenance
ow_preevent <- ggplot(ow_comb |> 
                      dplyr::filter(
                        between(dtime, 
                                ymd_hms("2025-02-25 6:00:00"),
                                ymd_hms("2025-06-20 6:00:00")
                                )),
                      aes(x = dtime)) +
   geom_ribbon(aes(ymin = 0, ymax = 3.17), fill = "lightblue", alpha = 0.4) +
  # OW1 water level
  geom_line(aes(y = ow1_cwlevel, color = "OW1 Water Level"),
            linewidth = 1.1) +
  # OW2 water level
  geom_line(aes(color = "OW2 Water Level", y = ow2_cwlevel),
            linewidth = 1.1) +
  # Bottom of crate elevation
  geom_hline(aes(yintercept = 0.25),
             linewidth = 0.6,
             linetype = "dashed")  +
  annotate("text", x =  ymd_hms("2025-02-25 06:00:00"),
           y = 0.8, 
           label = "Bottom of Crate",
           hjust = 0) +
  # Bottom of pipe bedding elevation
  # geom_hline(yintercept = 0.0,
  #            linetype = "dashed") +
  # annotate("text", x =  ymd_hms("2025-02-25 06:00:00"),
  #          y = .29, 
  #          label = "Bottom of pipe bedding",
  #          hjust = 0) +
  # OW2 top of storage elevation
  geom_hline(yintercept = 3.17, linetype = "dashed") +
    annotate("text",
             x =  ymd_hms("2025-02-25 06:00:00"),
             y = 3.37,
             label = "Top of Stone Storage",
             hjust = 0) +
    geom_hline(yintercept = 0.0) +
  annotate("text", x =  ymd_hms("2025-02-25 06:00:00"),
           y = -0.1, 
           label = "Bottom of Stone Storage",
           hjust = 0) +
  # # OW1 top of storage elevation
  #   geom_hline(yintercept = 4.25, linetype = "dashed") +
  #   annotate("text",
  #            x =  ymd_hms("2025-02-25 06:00:00"),
  #            y = 4.50, 
  #            label = "Top of Storage (OW1)",
  #            hjust = 0) +
  # Zoom level for plot 
  coord_cartesian(ylim = c(-.5, 4)) +
  labs(
    x = "Date",
    y = "Water level (ft)",
    color = NULL,
    title = "1140-3-2 Water Level Response (15-minute interval)"
  )  +
  theme(legend.position = "bottom") +
  # Color for water levels
   scale_color_manual(values = c(
    "OW1 Water Level" = "cornflowerblue",
    "OW2 Water Level" = "#2a3782")) +
  # Set y-axis formating to match rain
  scale_y_continuous(labels = function(x) sprintf("%.2f", x))
  
# Rain plot
rainfall_pre <- ggplot(ow_comb |>
                         # 3-hour interval to show all events
                         group_by(hour = lubridate::floor_date(dtime, "3 hour")) |>
                         summarize(hr_rain = sum(rainfall))|> 
                         dplyr::filter(
                           between(hour, 
                                ymd_hms("2025-02-25 06:00:00"),
                                ymd_hms("2025-06-20 06:00:00")
                                )),
                   aes(y = hr_rain)) +
  geom_col(aes(hour)) + 
  scale_y_continuous(lim = c(0, 2)) +
  labs(
    x = NULL,
    y = "Rainfall (in)",
    title = "1140-3-2 Rainfall (3-hour interval)"
  )

  
```

```{r}
# Combine into one plot
cowplot::plot_grid(rainfall_pre, ow_preevent,
                   nrow = 2,
                   rel_heights = c(1,3),
                   rel_widths = c(1,1)
                   )
```
